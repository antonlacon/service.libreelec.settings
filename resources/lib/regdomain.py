# SPDX-License-Identifier: GPL-2.0
# Copyright (C) 2020-present Team LibreELEC (https://libreelec.tv)

import os

import config
import os_tools


REGDOMAIN_DEFAULT = 'NOT SET (DEFAULT)'
REGDOMAIN_LIST = [REGDOMAIN_DEFAULT] + [
    "GLOBAL (00)",
    "Afghanistan (AF)",
    "Albania (AL)",
    "Algeria (DZ)",
    "American Samoa (AS)",
    "Andorra (AD)",
    "Anguilla (AI)",
    "Argentina (AR)",
    "Armenia (AM)",
    "Aruba (AW)",
    "Australia (AU)",
    "Austria (AT)",
    "Azerbaijan (AZ)",
    "Bahamas (BS)",
    "Bahrain (BH)",
    "Bangladesh (BD)",
    "Barbados (BB)",
    "Belarus (BY)",
    "Belgium (BE)",
    "Belize (BZ)",
    "Bermuda (BM)",
    "Bhutan (BT)",
    "Bolivia (BO)",
    "Bosnia and Herzegovina (BA)",
    "Brazil (BR)",
    "Brunei Darussalam (BN)",
    "Bulgaria (BG)",
    "Burkina Faso (BF)",
    "Cambodia (KH)",
    "Canada (CA)",
    "Cayman Islands (KY)",
    "Central African Republic (CF)",
    "Chad (TD)",
    "Chile (CL)",
    "China (CN)",
    "Christmas Island (CX)",
    "Colombia (CO)",
    "Costa Rica (CR)",
    "Côte d'Ivoire (CI)",
    "Croatia (HR)",
    "Cuba (CU)",
    "Cyprus (CY)",
    "Czechia (CZ)",
    "Denmark (DK)",
    "Dominica (DM)",
    "Dominican Republic (DO)",
    "Ecuador (EC)",
    "Egypt (EG)",
    "El Salvador (SV)",
    "Estonia (EE)",
    "Ethiopia (ET)",
    "Finland (FI)",
    "France (FR)",
    "French Guiana (GF)",
    "French Polynesia (PF)",
    "Georgia (GE)",
    "Germany (DE)",
    "Ghana (GH)",
    "Greece (GR)",
    "Greenland (GL)",
    "Grenada (GD)",
    "Guadeloupe (GP)",
    "Guam (GU)",
    "Guatemala (GT)",
    "Guyana (GY)",
    "Haiti (HT)",
    "Honduras (HN)",
    "Hong Kong (HK)",
    "Hungary (HU)",
    "Iceland (IS)",
    "India (IN)",
    "Indonesia (ID)",
    "Iran (IR)",
    "Ireland (IE)",
    "Israel (IL)",
    "Italy (IT)",
    "Jamaica (JM)",
    "Japan (JP)",
    "Jordan (JO)",
    "Kazakhstan (KZ)",
    "Kenya (KE)",
    "Korea (North) (KP)",
    "Korea (South) (KR)",
    "Kuwait (KW)",
    "Latvia (LV)",
    "Lebanon (LB)",
    "Lesotho (LS)",
    "Liechtenstein (LI)",
    "Lithuania (LT)",
    "Luxembourg (LU)",
    "Macao (MO)",
    "Malawi (MW)",
    "Malaysia (MY)",
    "Maldives (MV)",
    "Malta (MT)",
    "Marshall Islands (MH)",
    "Martinique (MQ)",
    "Mauritania (MR)",
    "Mauritius (MU)",
    "Mayotte (YT)",
    "Mexico (MX)",
    "Micronesia (FM)",
    "Moldova (MD)",
    "Monaco (MC)",
    "Mongolia (MN)",
    "Montenegro (ME)",
    "Morocco (MA)",
    "Nepal (NP)",
    "Netherlands (NL)",
    "Netherlands Antilles (AN)",
    "New Zealand (NZ)",
    "Nicaragua (NI)",
    "Nigeria (NG)",
    "North Macedonia (MK)",
    "Northern Mariana Islands (MP)",
    "Norway (NO)",
    "Oman (OM)",
    "Pakistan (PK)",
    "Palau (PW)",
    "Panama (PA)",
    "Papua New Guinea (PG)",
    "Paraguay (PY)",
    "Peru (PE)",
    "Philippines (PH)",
    "Poland (PL)",
    "Portugal (PT)",
    "Puerto Rico (PR)",
    "Qatar (QA)",
    "Réunion (RE)",
    "Romania (RO)",
    "Russian Federation (RU)",
    "Rwanda (RW)",
    "Saint Barthélemy (BL)",
    "Saint Kitts and Nevis (KN)",
    "Saint Lucia (LC)",
    "Saint Martin (MF)",
    "Saint Pierre and Miquelon (PM)",
    "Saint Vincent and the Grenadines (VC)",
    "Samoa (WS)",
    "Saudi Arabia (SA)",
    "Senegal (SN)",
    "Serbia (RS)",
    "Singapore (SG)",
    "Slovakia (SK)",
    "Slovenia (SI)",
    "South Africa (ZA)",
    "Spain (ES)",
    "Sri Lanka (LK)",
    "Suriname (SR)",
    "Sweden (SE)",
    "Switzerland (CH)",
    "Syria (SY)",
    "Taiwan (TW)",
    "Tanzania (TZ)",
    "Thailand (TH)",
    "Togo (TG)",
    "Trinidad and Tobago (TT)",
    "Tunisia (TN)",
    "Turkey (TR)",
    "Turks and Caicos Islands (TC)",
    "Uganda (UG)",
    "Ukraine (UA)",
    "United Arab Emirates (AE)",
    "United Kingdom (GB)",
    "United States (US)",
    "Uraguay (UY)",
    "Uzbekistan (UZ)",
    "Vanuatu (VU)",
    "Venezuela (VE)",
    "Vietnam (VN)",
    "Virgin Islands (VI)",
    "Wallis and Futuna (WF)",
    "Yemen (YE)",
    "Zimbabwe (ZW)"
]


def get_regdomain(regdomain=REGDOMAIN_DEFAULT):
    '''Get wireless regulatory domain from file and compare to wireless-regdb entries.'''
    if os.path.isfile(config.REGDOMAIN_CONF):
        code = f'({open(config.REGDOMAIN_CONF).readline().rstrip()[-2:]})'
        regdomain = next((l for l in REGDOMAIN_LIST if code in l), REGDOMAIN_DEFAULT)
    return regdomain


def set_regdomain(regdomain):
    '''Write wireless regulatory db entry to file and update active wireless use.'''
    if regdomain == REGDOMAIN_DEFAULT:
        if os.path.isfile(config.REGDOMAIN_CONF):
            os.remove(config.REGDOMAIN_CONF)
    else:
        with open(config.REGDOMAIN_CONF, mode='w', encoding='utf-8') as file:
            file.write(f'REGDOMAIN={regdomain[-3:-1]}\n')
    os_tools.execute(config.SETREGDOMAIN)
